{"version":3,"sources":["component/Options.js","component/Question.js","component/Page.js","component/CreatorPage.js","component/StartPage.js","component/SharePage.js","component/UserPage.js","component/Result.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","type","handleUserChange","handleCreatorChange","state","isSelected","test","_this2","div","options","map","option","react_default","a","createElement","className","key","value","assign","name","onClick","src","url","alt","e","_this3","target","result","img","nextElementSibling","classList","add","setTimeout","remove","onChange","Component","Question","selectedRadio","console","log","answer","question","Options_Options","Page","count","currentQuestion","selectedIndex","correctAnswer","label","i","push","questionHTML","currentQ","getQuestion","component_Question","incrementSkippedQuestion","questions","calculateUserResult","incrementQuestion","updateSelectedQuestion","index","indexOf","splice","selectedQuestions","setState","updateState","page","length","CreatorPage","Page_Page","StartPage","error","placeholder","aria-label","aria-describedby","SharePage","domain","quizId","href","encodeURI","UserPage","Result","getTable","score","rows","row","App","Error","fetch","then","res","json","data","loadImages","catch","q","o","reduce","b","concat","forEach","Image","StartPage_StartPage","CreatorPage_CreatorPage","SharePage_SharePage","getKey","quustions","UserPage_UserPage","Result_Result","getPage","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.087997d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nexport default class Options extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelected: false,\r\n      test: 'hi'\r\n    };\r\n  }\r\n  render() {\r\n    let options = this.props.options;\r\n    let div = options.map(option => (\r\n      <label className=\"optionLabel\" key={option.value}>\r\n        <input type=\"radio\" name=\"radio-button-group\" {...option} onClick={this.handleChange} />\r\n        <img src={option.url} alt={option.url}/>\r\n        <br />\r\n        {option.value}\r\n      </label>\r\n    ));\r\n\r\n    return (<div>{div}</div>);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    if (this.props.type === \"user\") {\r\n      this.handleUserChange(event);\r\n    }\r\n    if (this.props.type === \"creator\") {\r\n      this.handleCreatorChange(event);\r\n    }\r\n  }\r\n\r\n  handleUserChange(e) {\r\n    var className = \"\";\r\n    if (this.props.value === e.target.value) {\r\n      className = \"right\";\r\n      e.result = true;\r\n    } else {\r\n      className = \"wrong\";\r\n      e.result = false;\r\n    }\r\n    e.img = e.target.nextElementSibling;\r\n    e.img.classList.add(className);\r\n\r\n    setTimeout((e) => {\r\n      e.img.classList.remove(className);\r\n      this.props.onChange(e);\r\n    }, 500, e)\r\n  }\r\n\r\n  handleCreatorChange(event) {\r\n    this.props.onChange(event);\r\n  }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport Options from './Options';\r\n\r\nclass Question extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedRadio: null,\r\n    };\r\n    console.log('question console called');\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    if (this.props.type === \"user\") {\r\n      this.handleUserChange(event);\r\n    }\r\n    if (this.props.type === \"creator\") {\r\n      this.handleCreatorChange(event);\r\n    }\r\n  }\r\n\r\n  handleUserChange(event) {\r\n    this.props.handleChange(event);\r\n  }\r\n\r\n  handleCreatorChange(event) {\r\n    debugger\r\n    event.answer = event.target.value;\r\n    this.props.handleChange(event);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <div>\r\n          <div>{this.props.question}</div>\r\n          <Options type={this.props.type}\r\n            value={this.props.answer}\r\n            onChange={this.handleChange}\r\n            options={this.props.options}\r\n          />\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport './pagestyle.css';\r\nexport default class Page extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentQuestion: 1,\r\n      selectedIndex: 1,\r\n      correctAnswer: 0\r\n    };\r\n  }\r\n\r\n  count = 5;\r\n\r\n  render() {\r\n    let label = [];\r\n\r\n    for (let i = 1; i <= this.count; i++) {\r\n      label.push(<label className={i === this.state.currentQuestion ? 'highNumberLabel' : 'numberLabel'} key={i} >{i}</label>);\r\n    }\r\n    let currentQ = this.getQuestion();\r\n    let questionHTML;\r\n    if (currentQ) {\r\n      console.log('answer for' + this.state.currentQuestion + currentQ.answer);\r\n      questionHTML = <Question type={this.props.type} answer={currentQ.answer} question={currentQ.question} options={currentQ.options} handleChange={(event) => this.handleChange(event)}></Question>;\r\n    }\r\n    return (\r\n      <div>\r\n        {label}\r\n        <br />\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => { this.incrementSkippedQuestion() }}>Skip this question </button>\r\n        {questionHTML}\r\n      </div>);\r\n  }\r\n\r\n  getQuestion() {\r\n    return this.props.questions[this.state.selectedIndex - 1];\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (this.props.type === \"user\") {\r\n      this.handleUserChange(event);\r\n    }\r\n    if (this.props.type === \"creator\") {\r\n      this.handleCreatorChange(event);\r\n    }\r\n  }\r\n\r\n  handleUserChange(event) {\r\n    this.calculateUserResult(event);\r\n    this.incrementQuestion();\r\n    this.incrementSkippedQuestion();\r\n  }\r\n\r\n  handleCreatorChange(event) {\r\n    this.updateSelectedQuestion(event);\r\n    this.incrementQuestion();\r\n  }\r\n\r\n  updateSelectedQuestion(event) {\r\n    let currentQ = this.getQuestion();\r\n    var index = this.props.questions.indexOf(currentQ);\r\n    this.props.questions.splice(index, 1);\r\n    currentQ.answer = event.answer;\r\n    this.props.selectedQuestions.push(currentQ);\r\n  }\r\n\r\n  incrementQuestion() {\r\n    if (this.count > this.state.currentQuestion) {\r\n      this.setState({ currentQuestion: this.state.currentQuestion + 1 });\r\n    }\r\n    else {\r\n      this.props.updateState({ page: 'end' });\r\n    }\r\n  }\r\n\r\n\r\n  incrementSkippedQuestion() {\r\n    if (this.props.questions.length > this.state.selectedIndex)\r\n      this.setState({ selectedIndex: this.state.selectedIndex + 1 });\r\n    else {\r\n      this.setState({ selectedIndex: 1 });\r\n    }\r\n  }\r\n\r\n  calculateUserResult(event) {\r\n    if (event.result) {\r\n      this.setState({ correctAnswer: this.state.correctAnswer+1 });\r\n    }\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Page from './Page'\r\n\r\nexport default class CreatorPage extends Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      selectedQuestions: []\r\n    };\r\n  }\r\n\r\n  updateState = (e) => {\r\n    console.log(this.state.selectedQuestions);\r\n    e.selectedQuestions = this.state.selectedQuestions;\r\n    this.props.updateState(e);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>{this.props.name}\r\n        <Page questions={this.props.questions} selectedQuestions={this.state.selectedQuestions} updateState={this.updateState} type=\"creator\"></Page>\r\n      </div>);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './startPage.css'\r\n\r\nexport default class StartPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n\r\n  updateState = (e) => {\r\n    if (this.state.name) {\r\n      e.name = this.state.name;\r\n      e.page = 'start';\r\n      this.props.updateState(e);\r\n    } else {\r\n      this.setState({ error: 'Please enter your name' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h6><strong>2019 Friendship Dare!!!</strong></h6>\r\n        <br />\r\n        Enter your name and share your quiz with your friends\r\n        <br />\r\n        <span className=\"error\">{this.state.error}</span>\r\n        <input type=\"text\" value={this.state.name} onChange={this.handleChange} className=\"form-control text\" placeholder=\"Enter your name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n        <button className=\"btn btn-primary\" onClick={this.updateState}>Create quick quiz-></button>\r\n      </div>)\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class SharePage extends Component {\r\n\r\n  render() {\r\n    return (<div>\r\n      <h3>{this.props.domain + this.props.quizId}</h3>\r\n      <a href={'whatsapp://send?text=' + encodeURI(this.props.domain + this.props.quizId)}>Share to WhatsApp</a>\r\n    </div >);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Page from './Page'\r\n\r\nexport default class UserPage extends Component {\r\n\r\n  render() {\r\n    return <Page questions={this.props.questions} type=\"user\" updateState={this.props.updateState} ></Page>\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './ResultPage.css'\r\nexport default class Result extends Component {\r\n\r\n  render() {\r\n    let rows = [{ name: 'rahul', score: 10 }, { name: 'Naisini', score: 10 }];\r\n    return this.getTable(rows);\r\n  }\r\n\r\n  getTable(rows) {\r\n    return (<div className=\"tablediv\"><table className=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Score</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rows.map(row => {\r\n          return (<tr>\r\n            <td>{row.name}</td>\r\n            <td>{row.score}</td>\r\n          </tr>);\r\n        })}\r\n      </tbody>\r\n    </table></div>);\r\n  }\r\n\r\n}","import React, { Component } from 'react';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport CreatorPage from './component/CreatorPage'\nimport StartPage from './component/StartPage'\nimport SharePage from './component/SharePage'\nimport UserPage from './component/UserPage'\nimport Result from './component/Result'\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      questions: [],\n      page: \"result\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://5cfdeb3aca949b00148d3992.mockapi.io/mokka/quiz/questions')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ questions: data });\n        this.loadImages(data);\n      })\n      .catch(console.log)\n  }\n\n  loadImages(questions) {\n    questions.map((q) => {\n      return q.options.map(o => o.url);\n    }).reduce((a, b) => a.concat(b), []).forEach((q) => {\n      console.log(q)\n      new Image().src = q;\n    }\n    );\n  }\n\n\n  updateState = (e) => {\n    console.log(e)\n    let page = e.page;\n\n    switch (page) {\n      case 'quiz': break;\n      case 'start': this.setState({ page: \"quiz\", name: e.name }); break;\n      case 'end':\n        this.setState({ page: \"end\" });\n        console.log(e.selectedQuestions)\n          ; break;\n      default: throw new Error();\n    }\n  };\n\n  getPage(page) {\n    switch (page) {\n      case 'start': return <StartPage name={this.state.name} updateState={this.updateState}></StartPage>;\n      case 'quiz': return <CreatorPage name={this.state.name} updateState={this.updateState} questions={this.state.questions}></CreatorPage>;\n      case 'end': return <SharePage domain=\"http://oorga.co/fancywish?name=\" quizId={this.getKey()} name={this.state.name} updateState={this.updateState}></SharePage>;\n      case 'user':\n        var quustions = this.state.questions.map(q => {\n          q.answer = 'text1';\n          return q;\n        });\n        this.setState({ questions: quustions });\n        return <UserPage questions={this.state.questions} updateState={this.updateState}></UserPage>;\n      case 'result': return <Result></Result>;\n      default: throw new Error();\n    }\n  }\n\n  getKey() {\n    return 123;\n  }\n\n  render() {\n    return <div className=\"jumbotron start\">{this.getPage(this.state.page)}</div>;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}